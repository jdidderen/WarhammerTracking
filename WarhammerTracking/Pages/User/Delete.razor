@page "/user/delete/{id}"
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Http.Extensions
@using Microsoft.AspNetCore.Mvc.Routing
@using WarhammerTracking.Data
@using WarhammerTracking.Data.Army
@attribute [Authorize(Roles = "Admin")]
@inject UserDataAccessProvider UserDataAccessProvider
@inject NavigationManager NavigationManager

<h1>Users - Delete</h1>
<div class="alert alert-danger" role="alert">
Are you sure you want to delete this user ?
</div>

<div class="shadow-lg rounded form-box">
<div class="row">
    <EditForm Model="user" OnSubmit=@FormSubmit>
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group form-inline">
            <label for="username">UserName</label>
            <InputText id="username" @bind-Value="user.UserName" disabled/>
        </div>
        <div class="form-group form-inline">
            <label for="email">Email</label>
            <InputText id="email" @bind-Value="user.Email" disabled/>
        </div>
        <button class="btn btn-primary" type="submit">Submit</button>
        <input type="button" value="Cancel" @onclick="Cancel" class="btn btn-secondary"/>
    </EditForm>
</div>
</div>
@code {
    [Parameter]
    public string id { get; set; }
    
    ApplicationUser user;

    protected override async Task OnInitializedAsync()
    {
        user = await UserDataAccessProvider.GetUser(id);
    }

    private void DeleteUser()
    {
        UserDataAccessProvider.DeleteUser(id);
        NavigationManager.NavigateTo("user");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("user");
    }
    
    private async void FormSubmit(EditContext editContext)
    {
        if (editContext.Validate())
        {
            Console.WriteLine("Success");
            await UserDataAccessProvider.DeleteUser(id);
            NavigationManager.NavigateTo("user");
        }
        else
        {
            Console.WriteLine("Fail");
        }
    }

}