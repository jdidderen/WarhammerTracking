@page "/faction/edit/{id:int}"
@using Microsoft.AspNetCore.Components
@using WarhammerTracking.Data.Army
@attribute [Authorize(Roles = "User,Admin")]
@inject ArmyDataAccessProvider ArmyDataAccessProvider
@inject FactionDataAccessProvider FactionDataAccessProvider
@inject NavigationManager NavigationManager

<h1>Armies - Update</h1>
<div class="shadow-lg rounded form-box">
<div class="row">
    <EditForm Model="faction" OnSubmit=@FormSubmit>
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group form-inline">
            <label for="Name">Name</label>
            <InputText id="Name" @bind-Value="faction.name" />
        </div>
        <div class="form-group form-inline">
            <label for="Army">Army</label>
            <InputSelect id="Army" @bind-Value="ArmyId" >
                <option value=""></option>
                @foreach (var army in armies)
                {
                    <option value=@army.id.ToString()>@army.name.ToString()</option>
                }
            </InputSelect>
        </div>
        <button class="btn btn-primary" type="submit">Submit</button>
        <input type="button" value="Cancel" @onclick="Cancel" class="btn btn-secondary"/>
    </EditForm>
</div>
</div>
@code {
    [Parameter]
    public int id { get; set; }
    
    Army[] armies;
    string ArmyId;
    Faction faction;

    protected override async Task OnInitializedAsync()
    {
        armies = await ArmyDataAccessProvider.ListArmy();
        faction = await FactionDataAccessProvider.GetFaction(id);
        ArmyId = faction.ArmyId.ToString();
    }
    
    private void Cancel()
    {
        NavigationManager.NavigateTo("faction");
    }
    
    private async void FormSubmit(EditContext editContext)
    {
        Army SelectedArmy = await ArmyDataAccessProvider.GetArmy(Int32.Parse(ArmyId));
        if (SelectedArmy != null)
        {
            faction.army = SelectedArmy;
        }
        if (editContext.Validate())
        {
            await FactionDataAccessProvider.UpdateFaction(faction);
            NavigationManager.NavigateTo("faction");
            Console.WriteLine(ArmyId);
        }
        else
        {
            Console.WriteLine("Fail");
        }
    }

}