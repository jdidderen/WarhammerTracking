@page "/gamerequest/add"
@using Microsoft.AspNetCore.Components
@using Microsoft.Extensions.Localization
@using WarhammerTracking.Data
@using WarhammerTracking.Data.Game
@using WarhammerTracking.GameRequest
@attribute [Authorize(Roles = "User,Admin")]
@inject GameRequestDataAccessProvider GameRequestDataAccessProvider
@inject UserDataAccessProvider UserDataAccessProvider
@inject NavigationManager NavigationManager
@inject IStringLocalizer<Create> L

<h1>@L["GameRequests"] - @L["Add"]</h1>

<div class="shadow-lg rounded form-box">
<div class="row">
    <div class="col-md-12">
    <EditForm Model="GameRequest" OnSubmit=@FormSubmit>
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group form-inline">
            <label for="Date">@L["Date"]</label>
            <InputDate id="Date" @bind-Value="GameRequest.Date" />
        </div>
        <button class="btn btn-primary" type="submit">@L["Submit"]</button>
        <input type="button" value="@L["Cancel"]" @onclick="Cancel" class="btn btn-secondary"/>
    </EditForm>
    </div>
</div>
</div>

@code {
    GameRequest GameRequest = new GameRequest();

    protected override async Task OnInitializedAsync()
    {
        GameRequest.Date = DateTime.Now;
        ApplicationUser user = await UserDataAccessProvider.GetCurrentUser();
        GameRequest.Player = user;
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("gamerequest");
    }

    private async void FormSubmit(EditContext editContext)
    {
        if (editContext.Validate())
        {
            Console.WriteLine("Success");
            await GameRequestDataAccessProvider.AddGameRequest(GameRequest);
            NavigationManager.NavigateTo("gamerequest");
        }
        else
        {
            Console.WriteLine("Fail");
        }
    }

}