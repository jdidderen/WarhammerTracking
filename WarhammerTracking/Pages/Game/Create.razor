@page "/game/add"
@page "/game/add/{player1}/{player2}/{date}"
@using System.Collections.ObjectModel
@using System.Runtime.InteropServices.ComTypes
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Http.Extensions
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.Routing
@using WarhammerTracking.Data
@using WarhammerTracking.Data.Army
@using WarhammerTracking.Data.Game
@attribute [Authorize(Roles = "User,Admin")]
@inject GameDataAccessProvider GameDataAccessProvider
@inject UserDataAccessProvider UserDataAccessProvider
@inject FactionDataAccessProvider FactionDataAccessProvider
@inject NavigationManager NavigationManager

<h1>Games - Add</h1>
<div class="shadow-lg rounded form-box">
    <EditForm Model="game" OnSubmit=@FormSubmit>
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="col-md-12">
            <div class="form-group form-inline">
                <label for="Date">Date</label>
                <InputDate for="Date" class="form-control" @bind-Value="@game.Date"/>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group form-inline">
                    <label for="TableNumber">Table Number</label>
                    <InputText id="TableNumber" class="form-control" @bind-Value="@game.TableNumber"/>
                    <label style="margin-left: 30px;" for="ScenarioNumber">Scenario Number</label>
                    <InputText id="ScenarioNumber" class="form-control" @bind-Value="@game.ScenarioNumber"/>
                    <label style="margin-left: 30px;" for="Location">Location</label>
                    <InputText id="Location" class="form-control" @bind-Value="@game.Location"/>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
            <h2>Player 1</h2>
            <div class="form-group form-inline">
                        <label for="User1">Player 1</label>
                        <InputSelect for="User1" id="user1" @bind-Value="User1Id">
                        <option value=""></option>
                        @foreach (var user in Users)
                        {
                        <option value=@user.Id.ToString()>@user.UserName.ToString()</option>
                        }
                        </InputSelect>
            </div>
            <div class="form-group form-inline">
                        <label for="FactionPlayer1">Faction</label>
                        <InputSelect for="FactionPlayer1" id="FactionPlayer1" @bind-Value="FactionPlayer1">
                        <option></option>
                        @foreach (var faction in Factions)
                        {
                        <option value=@faction.id.ToString()>@faction.name.ToString()</option>
                        }
                        </InputSelect>
            </div>
            <div class="form-group form-inline">
                <label for="CpPlayer1">CP</label>
                <InputNumber for="CpPlayer1" class="form-control" @bind-Value="@game.CpPlayer1"/>
            </div>
        </div>
            <div class="col-md-6">
            <h2>Player 2</h2>
            <div class="form-group form-inline">
                        <label for="User2">Player 2</label>
                        <InputSelect for="User2" id="user2" @bind-Value="User2Id">
                        <option value=""></option>
                        @foreach (var user in Users)
                        {
                        <option value=@user.Id.ToString()>@user.UserName.ToString()</option>
                        }
                        </InputSelect>
            </div>
            <div class="form-group form-inline">
                        <label for="FactionPlayer2">Faction</label>
                        <InputSelect for="FactionPlayer2" id="FactionPlayer2" @bind-Value="FactionPlayer2">
                        <option value=""></option>
                        @foreach (var faction in Factions)
                        {
                        <option value=@faction.id.ToString()>@faction.name.ToString()</option>
                        }
                        </InputSelect>
            </div>
            <div class="form-group form-inline">
                <label for="CpPlayer2">CP</label>
                <InputNumber for="CpPlayer2" class="form-control" @bind-Value="@game.CpPlayer2"/>
            </div>
        </div>        
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="btn-group" style="margin-bottom: 10px;" role="group">
                    <button type="button" class="btn btn-dark" @onclick="ChangeNoteView">Note</button>
                    <button type="button" class="btn btn-dark" @onclick="ChangeList1View">Player 1 - List</button>
                    <button type="button" class="btn btn-dark" @onclick="ChangeList2View">Player 2 - List</button>
                </div>
                @if (showNote)
                {
                    <div class="form-group">
                        <InputTextArea id="Note" @bind-Value="@game.Note" class="form-control"></InputTextArea>
                    </div>
                }
                @if (showList1)
                {
                    <div class="form-group">
                        <InputTextArea id="List1" @bind-Value="@game.ListPlayer1" class="form-control"></InputTextArea>
                    </div>
                }
                @if (showList2)
                {
                    <div class="form-group">
                        <InputTextArea id="List2" @bind-Value="@game.ListPlayer2" class="form-control"></InputTextArea>
                    </div>
                }
            </div>
        </div>
        <button class="btn btn-primary" type="submit">Submit</button>
        <input type="button" value="Cancel" @onclick="Cancel" class="btn btn-secondary"/>
    </EditForm>
</div>

@code {
    [Parameter]
    public string player1 { get; set; }
    [Parameter]
    public string player2 { get; set; }
    [Parameter]
    public string date { get; set; }
    ApplicationUser[] Users;
    Faction[] Factions;
    string User1Id;
    string User2Id;
    string FactionPlayer1;
    string FactionPlayer2;
    Game game = new Game();
    bool showNote = true;
    bool showList1 = false;
    bool showList2 = false;
    
    protected override async Task OnInitializedAsync()
    {
        Users = await UserDataAccessProvider.ListUser();
        Factions = await FactionDataAccessProvider.ListFaction();
        if (!String.IsNullOrEmpty(player1) && !String.IsNullOrEmpty(player2) && !String.IsNullOrEmpty(date))
        {
            
            User1Id = player1;
            User2Id = player2;
            game.Date = DateTime.ParseExact(date, "dd-MM-yyyy",null);
        }
        else
        {
            game.Date = DateTime.Now;
        }
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("game");
    }
    
    private async void FormSubmit(EditContext editContext)
    {
        ApplicationUser User1 = await UserDataAccessProvider.GetUser(User1Id);
        ApplicationUser User2 = await UserDataAccessProvider.GetUser(User2Id);
        Faction Faction1 = await FactionDataAccessProvider.GetFaction(Int32.Parse(FactionPlayer1));
        Faction Faction2 = await FactionDataAccessProvider.GetFaction(Int32.Parse(FactionPlayer2));
        if (User1 != null && User2 != null && Faction1 != null && Faction2 != null)
        {
            game.Player1 = User1;
            game.Player2 = User2;
            game.FactionPlayer1 = Faction1;
            game.FactionPlayer2 = Faction2;

        }
        if (editContext.Validate())
        {
            await GameDataAccessProvider.AddGame(game);
            NavigationManager.NavigateTo("game/edit/"+game.id);
        }
        else
        {
            Console.WriteLine("Fail");
        }
    }
    
    void ChangeNoteView()
    {
        showNote = true;
        showList1 = false;
        showList2 = false;
    }

    void ChangeList1View()
    {
        showNote = false;
        showList1 = true;
        showList2 = false;
    }
    
    void ChangeList2View()
    {
        showNote = false;
        showList1 = false;
        showList2 = true;
    }

}