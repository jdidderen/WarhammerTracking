@typeparam TItem

<!--suppress SpellCheckingInspection -->
<style>
.noselect {
   cursor: pointer;
   -webkit-touch-callout: none;
   -webkit-user-select: none;
   -moz-user-select: none; 
   -ms-user-select: none;
   user-select: none;
            }
</style>

<th class="noselect">
    <span @onclick="@(() => SortTable(ColumnName))">@DisplayColumnName</span>
    <span class="oi @(GetSortStyle(ColumnName))"></span>
           </th>

           @code {

               [Parameter]
               public string DisplayColumnName { get; set; } = string.Empty;

               [Parameter]
               public string ColumnName { get; set; }

               [CascadingParameter]
               public DataGrid<TItem> DataGrid { get; set; }

               private bool _isSortedAscending;

               private void SortTable(string columnName)
               {
                   if (columnName != DataGrid.CurrentSortColumn)
                   {
                       Console.WriteLine("1");
                       DataGrid.SortTable(columnName,true);
                       _isSortedAscending = true;
                   }
                   else
                   {
                       Console.WriteLine("2");
                       DataGrid.SortTable(columnName, !_isSortedAscending);
                       _isSortedAscending = !_isSortedAscending;
                   }
               }

               private string GetSortStyle(string columnName)
               {
                   if (DataGrid.CurrentSortColumn != columnName)
                   {
                       return string.Empty;
                   }
                   return _isSortedAscending ? "oi-arrow-top" : "oi-arrow-bottom";
               }

           }